}
pippo=train_ss(income,prestige)
predict_ss(pippo,income)
c_preds=conformal.pred(income,prestige,income.grid,alpha=0.05,verbose=T,train.fun = train_ss ,predict.fun = predict_ss,num.grid.pts = 200)
lines(income.grid,c_preds$pred ,lwd =2, col ="red",lty=3)
matlines(income.grid ,cbind(c_preds$up,c_preds$lo) ,lwd =1, col =" blue",lty =3)
#let's try to do it in a more complex case... GAMS
library
library(mgcv)
model_gam=gam(prestige ~ s(education,bs='cr') + s(income,bs='cr'))
help(psm)
library(mcclust.ext)
comp.psm
help(comp.psm)
help(heatmap)
help("heatmap")
help(psm)
help(heatmap)
help(image)
help(heatmap)
install.packages("garchx")
garchx::garchx
load("C:\\Users\\aughi\\AppData\\Local\\Temp\\Temp1_dati_HF_sample.zip\\dati_HF_sample.RData")
View(test.ph)
View(age_df)
View(bla)
View(cox.age)
View(cox.age)
View(lung)
## COXME model
coxme.mod <- coxme(Surv(GapEvent,event) ~ SESSO + ADERENTE + etaEvent + comorbidity + (1|COD_REG), data = data)
################################ COX MIXED EFFECT MODEL ###########################################
## Load packages
rm(list = ls())
library(data.table)
library(survival)
library(survminer)
library(coxme)
## Load Dataset
load("With_Adherence_Dataset/ACE_Inhibitors.RData")
## Arrange Dataset
# histogram
per_hist=new[is.na(hosp)==F,max(hosp),by=COD_REG]
hist(per_hist$V1)
# time at hospitalization events
new[!is.na(hosp), timeEvent:= data_prest - data_rif_ev]
# eta at hospitalization events
new[!is.na(hosp), etaEvent:= eta_Min]
# numbers of comorbidity at hospitalization events discharge
new[!is.na(hosp), comorbidity:=rowSums(.SD), .SDcols = 36:55]
# flag for event
new[!is.na(hosp), event:= 1]
# flag for type of censoring
new[!is.na(hosp), cens:=NA]
## build dataset
# key: COD_REG
# flag: event
# time: timeEvent
# patient level: SESSO, ADERENTE
# event level: eta_event, comorbidity
data <- subset(new,hosp>=1,select = c(COD_REG,event,timeEvent,SESSO,ADERENTE,etaEvent,comorbidity,cens))
names(data)
# add censoring event per patient
codici<- unique(data$COD_REG)
for(i in 1:length(codici)){
paz_corrente <- codici[i]
temp <- data.frame(paz_corrente,0,unique(new[COD_REG==paz_corrente]$timeOUT),unique(new[COD_REG==paz_corrente]$SESSO),
unique(new[COD_REG==paz_corrente]$ADERENTE),
min(new[COD_REG==paz_corrente]$eta_Min) +
as.integer(format(unique(new[COD_REG==paz_corrente]$data_studio_out), format="%Y")) -
as.integer(format(unique(new[COD_REG==paz_corrente]$data_rif_ev), format="%Y")),
tail(data[COD_REG==paz_corrente]$comorbidity,n=1),unique(new[COD_REG==paz_corrente]$death))
names(temp) <- names(data)
attributes(temp$timeEvent)<-attributes(data$timeEvent)
data <- rbind(data,temp)
}
# sort data
data <- data[order(COD_REG),]
## Arrange variables
data$COD_REG= factor(data$COD_REG)
data$status = factor('na')
for( i in 1:dim(data)[1]){
if(data[i]$event==1)
data[i]$status="hospitalization"
else {
if(data[i]$cens==0)
data[i]$status="censored"
else
data[i]$status="dead"
}
}
data$ADERENTE=factor(data$ADERENTE)
## Plot: multiple events & death as non-informative censoring
data_head=data[1:15,]
data_head$time_y=data_head$timeEvent/365
data_head$event=factor(data_head$event, labels=c('terminal','recurrent'))
ggplot(data=data_head,aes(x=COD_REG,y=as.double(time_y),group=COD_REG)) +
geom_line()+
geom_point(aes(color=event,shape=status),size=3)+
xlab("ID")+
ylab("years")+
coord_flip()
## Pass to gap times between events
data[,GapEvent:=as.integer(timeEvent)-as.integer(shift(timeEvent)),by=COD_REG]
data<-data[!is.na(GapEvent)]
## COXME model
coxme.mod <- coxme(Surv(GapEvent,event) ~ SESSO + ADERENTE + etaEvent + comorbidity + (1|COD_REG), data = data)
coxme.mod
A=matrix(0,9,9)
A[1,]=[0,1,0.25,0,0,0,0,0,0.25]
A[1,:]=[0,1,0.25,0,0,0,0,0,0.25]
A(1,:)=[0,1,0.25,0,0,0,0,0,0.25]
A(1,)=[0,1,0.25,0,0,0,0,0,0.25]
A(1,)=c(0,1,0.25,0,0,0,0,0,0.25)
A[1,1]
A[1,]
A[1,]=c(0,1,0.25,0,0,0,0,0,0.25)
A=matrix(0,9,9)
A[1,]=c(0,1,-0.25,0,0,0,0,0,-0.25)
A[2,]=c(-0.25,-0.25,1,-0.25,0,0,0,0,0)
A[3,]=c(0,0,-0.25,1,-0.25,0,0,0,0)
A[4,]=c(-0.25,-0.25,0,0,0,0,0,-0.25,1)
A[5,]=c(1,0,-0.25,0,-0.25,0,-0.25,0,-0.25)
A[6,]=c(-0.25,0,0,-0.25,-0.25,-0.25,0,0,0)
A[7,]=c(0,0,0,0,0,0,-0.25,1,-0.25)
A[8,]=c(-0.25,0,0,0,0,-0.25,1,-0.25,0)
A[9,]=c(0,0,0,0,-0.25,1,-0.25,0,0)
A
A[6,]=c(-0.25,0,0,-0.25,1,-0.25,0,0,0)
A
b=matrix(1,9,1)
b
solve(A,b)
library(frailtypack)
help("frailtypenal")
help("frailtyPenal")
sessionInfo()
library(openblasctl)
install.packages("openblasctl")
Rsys.getenv()
Sys.getenv()
library(secr)
install.packages("secr")
library(secr)
setNumThreads()
library(parallel)
detectCores()
detectCores(logical=FALSE)
Sys.getenv()
load("C:/Users/aughi/Desktop/TESI/Code/LombardyDataset.Rdata")
LombardyDataset$class_prest
setwd("~/")
setwd("C:/Users/aughi/Desktop/TESI/Code")
## clean workspace
rm( list = ls ())
## load libraries
library(data.table)
## load data
load("LombardyDataset.RData")
## arrange data
data<-LombardyDataset
dim(data)
names(data)
factor(data$tipo_prest)
max(data$data_rif_ev)
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
# final date
selection = selection[selection$data_rif_ev <= "2011-12-31"]
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
# final date
selection = selection[selection$data_rif_ev <= "2012-12-31"]
as.factor(selection$COD_REG)
max(selection$data_rif_ev)
View(LombardyDataset)
min(LombardyDataset[class_prest==30])$data_rif_ev
min(LombardyDataset[class_prest==30,]$data_rif_ev)
LombardyDataset[class_prest==30]
min(LombardyDataset[tipo_prest==30]$data_prest)
factor(LombardyDataset$tipo_prest)
LombardyDataset[tipo_prest==21]
LombardyDataset[tipo_prest==22]
factor(LombardyDataset$tipo_prest)
LombardyDataset[tipo_prest==22]
LombardyDataset[tipo_prest==42]
LombardyDataset[tipo_prest==43]
min(LombardyDataset[tipo_prest==30]$data_prest)
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
as.factor(selection$tipo_prest)
# final date
selection = selection[selection$data_rif_ev <= "2011-12-31"]
as.factor(selection$COD_REG)
max(selection$data_rif_ev)
# at least one year survival
selection = selection[which(selection$data_studio_out-selection$data_rif_ev>=365)]
# at least one year survival
selection = selection[which(selection$data_studio_out-selection$data_rif_ev>=365)]
selection[tipo_prest==41,]$data_studio_out
selection[tipo_prest==41,]$data_prest
min(selection[tipo_prest==41,]$data_prest)
## clean workspace
rm( list = ls ())
## load libraries
library(data.table)
## load data
load("LombardyDataset.RData")
## arrange data
data<-LombardyDataset
dim(data)
names(data)
as.factor(data$COD_REG)
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
as.factor(selection$tipo_prest)
table(selection$tipo_prest)
# final date
selection = selection[selection$data_rif_ev <= "2012-12-31"]
max(LombardyDataset$data_studio_out)
max(LombardyDataset$data_studio_out, na.rm = T)
as.factor(selection$COD_REG)
## clean workspace
rm( list = ls ())
## load libraries
library(data.table)
## load data
load("LombardyDataset.RData")
## arrange data
data<-LombardyDataset
dim(data)
names(data)
as.factor(data$COD_REG)
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
as.factor(selection$tipo_prest)
# final date
selection = selection[selection$data_rif_ev <= "2012-12-31"]
as.factor(selection$COD_REG)
as.factor(selection$tipo_prest)
table(selection$tipo_prest)
View(selection)
names(LombardyDataset)
## clean workspace
rm( list = ls ())
## load libraries
library(data.table)
## load data
load("LombardyDataset.RData")
## arrange data
data<-LombardyDataset
dim(data)
names(data)
as.factor(data$COD_REG)
## cohort selection
# hospitalizations and pharmacological prescriptions
selection = data[data$tipo_prest==41 | data$tipo_prest==30]
as.factor(selection$tipo_prest)
# final date
selection = selection[selection$data_rif_ev <= "2012-12-31"]
as.factor(selection$COD_REG)
max(selection$data_rif_ev)
# at least one year survival
selection = selection[which(selection$data_studio_out-selection$data_rif_ev>=365)]
load("C:/Users/aughi/Desktop/TESI/Code/SelectedDataFFU.RData")
as.factor(selection$COD_REG)
table(selection$tipo_prest)
dim(selection[tipo_prest==30 & data_prest<data_rif_ev+365])
84066/313767
as.factor(selection[tipo_prest==30 & data_prest<data_rif_ev+365]$COD_REG)
table(selection$ATC)
table(selection$classe_pharma)
table([selection$classe_pharma, selection$tipo_prest])
table(selection$classe_pharma, selection$tipo_prest)
table(selection$tipo_prest)
table(selection$tipo_prest, selection$classe_pharma)
table(selection$class_pharma)
table(selection$classe_pharma)
table(selection$classe_pharma)[1,]
table(selection$classe_pharma)[1]
table(selection$classe_pharma)[[1]]
sum(table(selection$classe_pharma))
table(selection[,c(classe_pharma,tipo_prest)])
selection[,c(classe_pharma,tipo_prest)]
names(selection)
table(selection[,c(11,22)])
## clear workspace
rm( list = ls ())
## load libraries
library(data.table)
## load data
load("SelectedDataFFU.RData")
## chosen drug
classe = "ARB"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/ARB.RData")
## chosen drug
classe = "AA"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/AA.RData")
## chosen drug
classe = "BB"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/AA.RData")
## chosen drug
classe = "DIU"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/DIU.RData")
## chosen drug
classe = "BB"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/BB.RData")
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/ACE_Inhibitors.RData")
table(new$tipo_prest)
as.factor(new$COD_REG)
table(new$tipo_prest)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/ARB.RData")
table(new$tipo_prest)
as.factor(new$COD_REG)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/AA.RData")
as.factor(new$COD_REG)
table(new$tipo_prest)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/BB.RData")
as.factor(new$COD_REG)
table(new$tipo_prest)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/BB.RData")
table(new$tipo_prest)
as.factor(new$COD_REG)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/AA.RData")
as.factor(new$COD_REG)
table(new$tipo_prest)
## load data
load("SelectedDataFFU.RData")
## chosen drug
classe = "BB"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/BB.RData")
## chosen drug
classe = "AA"
## patients under chosen treatment
patients = unique(selection[classe_pharma == classe]$COD_REG)
## split dataset
new = selection[(COD_REG %in% patients & tipo_prest==41)|(COD_REG %in% patients & classe_pharma == classe)]
unique(new$classe_pharma)
## save
save(new, file="Split_Dataset_FFU/AA.RData")
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/AA.RData")
as.factor(new$COD_REG)
table(new$tipo_prest)
load("C:/Users/aughi/Desktop/TESI/Code/Split_Dataset_FFU/DIU.RData")
as.factor(new$COD_REG)
table(new$tipo_prest)
View(new)
load("C:/Users/aughi/Desktop/TESI/Code/With_Adherence_Dataset_FFU/ACE_Inhibitors.RData")
new[COD_REG==10003004,]
new[COD_REG==10003004,tipo_prest==41]
new[COD_REG==10003004 & tipo_prest==41,]
## clean workspace
rm(list = ls())
## load packages
library(data.table)
library(survival)
library(survminer)
library(ggplot2)
## load data
load("With_Adherence_Dataset_FFU/ACE_Inhibitors.RData")
## arrange Dataset
# time at hospitalization events
new[!is.na(hosp), timeEvent:= data_prest - data_rif_ev]
# age at hospitalization events
new[!is.na(hosp), etaEvent:= eta_Min]
# numbers of comorbidities at hospitalization events
new[!is.na(hosp), comorbidity:=rowSums(.SD), .SDcols = 36:55]
# flag for event
new[!is.na(hosp), event:= 1]
# flag for type of censoring
new[!is.na(hosp), cens:=0]
new[COD_REG==10003004]
new[COD_REG==10003004 & tipo_prest==41]
## build dataset
# key: COD_REG
# flag: event
# time: timeEvent
# patient level: SESSO, ADERENTE
# event level: eta_event, comorbidity
data <- subset(new,hosp>=1,select = c(COD_REG,event,timeEvent,SESSO,ADERENTE,etaEvent,comorbidity,cens))
names(data)
# add censoring event per patient
codici<- unique(data$COD_REG)
for(i in 1:length(codici)){
paz_corrente <- codici[i]
temp <- data.frame(paz_corrente,0,unique(new[COD_REG==paz_corrente]$timeOUT),unique(new[COD_REG==paz_corrente]$SESSO),
unique(new[COD_REG==paz_corrente]$ADERENTE),
min(new[COD_REG==paz_corrente]$eta_Min) +
as.integer(format(unique(new[COD_REG==paz_corrente]$data_studio_out), format="%Y")) -
as.integer(format(unique(new[COD_REG==paz_corrente]$data_rif_ev), format="%Y")),
tail(data[COD_REG==paz_corrente]$comorbidity,n=1),unique(new[COD_REG==paz_corrente]$death))
names(temp) <- names(data)
attributes(temp$timeEvent)<-attributes(data$timeEvent)
data <- rbind(data,temp)
}
# sort data
data <- data[order(COD_REG),]
## Arrange variables
data$COD_REG= factor(data$COD_REG)
data$SESSO=factor(data$SESSO)
data$ADERENTE=factor(data$ADERENTE)
data$etaEvent=as.double(data$etaEvent)
## Define gap times
data[,check:=as.integer(timeEvent)-as.integer(shift(timeEvent,n=-1)),by=COD_REG]
data<-data[!(event==1 & check==0)]
data[,GapEvent:=as.integer(timeEvent)-as.integer(shift(timeEvent)),by=COD_REG]
data<-data[!is.na(GapEvent) & GapEvent!=0]
data[COD_REG==10003004]
## build dataset
# key: COD_REG
# flag: event
# time: timeEvent
# patient level: SESSO, ADERENTE
# event level: eta_event, comorbidity
data <- subset(new,hosp>=1,select = c(COD_REG,event,timeEvent,SESSO,ADERENTE,etaEvent,comorbidity,cens))
names(data)
# add censoring event per patient
codici<- unique(data$COD_REG)
for(i in 1:length(codici)){
paz_corrente <- codici[i]
temp <- data.frame(paz_corrente,0,unique(new[COD_REG==paz_corrente]$timeOUT),unique(new[COD_REG==paz_corrente]$SESSO),
unique(new[COD_REG==paz_corrente]$ADERENTE),
min(new[COD_REG==paz_corrente]$eta_Min) +
as.integer(format(unique(new[COD_REG==paz_corrente]$data_studio_out), format="%Y")) -
as.integer(format(unique(new[COD_REG==paz_corrente]$data_rif_ev), format="%Y")),
tail(data[COD_REG==paz_corrente]$comorbidity,n=1),unique(new[COD_REG==paz_corrente]$death))
names(temp) <- names(data)
attributes(temp$timeEvent)<-attributes(data$timeEvent)
data <- rbind(data,temp)
}
# sort data
data <- data[order(COD_REG),]
## Arrange variables
data$COD_REG= factor(data$COD_REG)
data$SESSO=factor(data$SESSO)
data$ADERENTE=factor(data$ADERENTE)
data$etaEvent=as.double(data$etaEvent)
## Define gap times
data[,check:=as.integer(timeEvent)-as.integer(shift(timeEvent,n=-1)),by=COD_REG]
data<-data[!(event==1 & check==0)]
data[,GapEvent:=as.integer(timeEvent)-as.integer(shift(timeEvent)),by=COD_REG]
data[COD_REG==10003044]
data[COD_REG==10003004]
## clear workspace
rm(list = ls())
## load packages
library(data.table)
library(survival)
library(survminer)
library(ggplot2)
## load dataset
load("With_Adherence_Dataset_FFU/ACE_Inhibitors.RData")
## arrange Dataset
# total number of hospitalizations
new[, tot_hosp:=max(hosp,na.rm = TRUE), by=COD_REG]
# number of hospitalizations within 1st year of follow up
new[, tot_hosp_1st:=max(hosp[which(data_prest-data_rif_ev<=365)],na.rm = TRUE), by=COD_REG]
# number of comorbidities at first discharge
new[!is.na(hosp), comorbidity:=rowSums(.SD), .SDcols = 36:55]
# max number of comorbidities observed within 1st year of follow up
new[, max_como_1st:=max(comorbidity[which(data_prest-data_rif_ev<=365)],na.rm = TRUE), by=COD_REG]
# rearrange dataset
data <- subset(new,hosp==1,select = c(COD_REG,death,timeOUT,SESSO,eta_Min,tot_hosp_1st,tot_hosp,ADERENTE,ADH_LEV,comorbidity, max_como_1st))
# arrange variables
data$COD_REG= factor(data$COD_REG)
data$status=factor(data$death, labels=c('censored','death'))
data$ADERENTE=factor(data$ADERENTE)
data$ADH_LEV= factor(data$ADH_LEV)
data$timeOUT = data$timeOUT - 365
data[COD_REG==10003004]
1659+365
